/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AuditLog {
  actor_id: string | null;
  context: Generated<Json>;
  created_at: Generated<Timestamp>;
  diff: Json;
  entity_id: string;
  entity_type: string;
  event_type: string;
  id: Generated<string>;
}

export interface Organization {
  created_at: Generated<Timestamp>;
  current_plan_id: string | null;
  id: Generated<string>;
  metadata: Generated<Json>;
  name: string;
  slug: string;
  stripe_customer_id: string | null;
  stripe_subscription_status: string | null;
  type: string;
  updated_at: Generated<Timestamp>;
}

export interface OrganizationMember {
  created_at: Generated<Timestamp>;
  organization_id: string;
  updated_at: Generated<Timestamp>;
  user_id: string;
}

export interface Plan {
  created_at: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  metadata: Generated<Json>;
  name: string;
  price_per_month: number;
  stripe_price_id: string;
  stripe_product_id: string;
  updated_at: Generated<Timestamp>;
}

export interface Project {
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  metadata: Generated<Json>;
  name: string;
  organization_id: string;
  updated_at: Generated<Timestamp>;
}

export interface ProjectMember {
  id: Generated<string>;
  project_id: string;
  user_id: string;
}

export interface DB {
  audit_log: AuditLog;
  organization: Organization;
  organization_member: OrganizationMember;
  plan: Plan;
  project: Project;
  project_member: ProjectMember;
}
